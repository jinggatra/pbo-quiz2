package UI;

/**
 *
 * @author J I N G G A
 */
import java.util.* ;
import javax.swing.JOptionPane ;
import javax.swing.table.DefaultTableModel ;
import UI.*;
import com.taufik.kuis2.Item;
import com.taufik.kuis2.TableCofee;
import com.taufik.kuis2.Transaksi;
import java.awt.event.ActionEvent;
import java.text.SimpleDateFormat;
public class TableCoffee extends javax.swing.JFrame {
    
    // ID untuk kode transaksi
    private int id = 0;
    // kode transaksi
    private String code;
    // untuk combo box
    private DefaultTableModel tableModel;
    //menampilkan transaksi Item
    private ArrayList<Item> belanja = new ArrayList<>();

    public TableCoffee() {
        //mendapatkan nama kolom
        TableCofee tableModel = new TableCofee();
        this.tableModel = new DefaultTableModel(tableModel.getKolomNama(), 0);
        initComponents();
    }
    
    // method buat penambahan id
    private void tambahId(){
        this.id += 1;
    }
    
    // method pengurangan id
    private void kurangId(){
        this.id -= 1;
    }
    
    // fungsi setCode
    private String setCode(){
        this.tambahId();
        // tanggal
        String date = new SimpleDateFormat("yyMMdd").format(new Date());
        this.code = String.format(date, "%02d", this.id);
        return code;
    }
    
    // update fungsi jumlah
    private void updateJumlah(String nama, int add){
        boolean hasil = false;
        ArrayList<String> item = new ArrayList<>();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            item.add(tableModel.getValueAt(i,0).toString());
        }
        for (int i = 0; i < item.size(); i++) {
            if (item.get(i).equals(nama)) {
                int jumlah = new Integer(tableModel.getValueAt(i, 2).toString());
                tableModel.setValueAt(+ add, i, 2);
            }
        }
    }
    
    // sekarang mengecek jika ada item yang double pada item sebelumnya
    private boolean isDouble(String nama){
        boolean hasil = false;
        ArrayList<String> item = new ArrayList<>();
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            item.add(tableModel.getValueAt(i,0).toString());
        }
        for (String i : item) {
            if (i.equals(nama)) {
                hasil = true;
            }
        }
        return hasil;
    }
    
    // mengecek apakah ada table yang kosong
    private boolean isKosong(){
        return this.ItemsListTable.getModel().getRowCount() <= 0;
    }
    
    // matikan tombol remove dan save jika isi tabel kosong
    private void dafbelanja(){
        if (isKosong()) {
            this.SaveButton.setEnabled(false);
            this.RemoveButton.setEnabled(false);
        }
        else{
            this.SaveButton.setEnabled(true);
            this.RemoveButton.setEnabled(true);
        }
    }
    
    // dapat melakukan transaksi baru jika sudah menyelesaikan transaksi sebelumnya
    private void newTransaksi () {
        this.JumlahItemsText.setText(" ") ;
        this.CodeText.setText(" ") ;
        this.NewButton.setEnabled(true) ;
        this.SaveButton.setEnabled(false) ;
        this.CancelButton.setEnabled(false) ;
        this.AddButton.setEnabled(false) ;
        this.RemoveButton.setEnabled(false) ;
        this.RemoveButton.setEnabled(false) ;
        this.JumlahItemsText.setEnabled(false) ;
        this.ItemsComboBox.setEnabled(false) ;
        this.tableModel.setRowCount(0) ;
        this.belanja.clear() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CodeText = new javax.swing.JTextField();
        ItemsComboBox = new javax.swing.JComboBox<>();
        JumlahItemsText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ItemsListTable = new javax.swing.JTable();
        SaveButton = new javax.swing.JButton();
        CancelButton = new javax.swing.JButton();
        NewButton = new javax.swing.JButton();
        AddButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Code");

        jLabel2.setText("Items");

        ItemsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kopi", "Gula", "Susu" }));
        ItemsComboBox.setSelectedIndex(-1);
        ItemsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ItemsComboBoxActionPerformed(evt);
            }
        });

        ItemsListTable.setModel(this.tableModel);
        jScrollPane1.setViewportView(ItemsListTable);

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        CancelButton.setText("Cancel");
        CancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelButtonActionPerformed(evt);
            }
        });

        NewButton.setText("New");
        NewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewButtonActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        RemoveButton.setText("Remove");
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SaveButton)
                        .addGap(18, 18, 18)
                        .addComponent(CancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(ItemsComboBox, 0, 223, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JumlahItemsText, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CodeText))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(RemoveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NewButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CodeText, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NewButton)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ItemsComboBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AddButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JumlahItemsText))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemoveButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SaveButton)
                    .addComponent(CancelButton))
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ItemsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ItemsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ItemsComboBoxActionPerformed

    private void CancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelButtonActionPerformed
        newTransaksi() ;
        this.kurangId();
    }//GEN-LAST:event_CancelButtonActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        try {
            // loop setiap tabel
            for (int i = 0; i < tableModel.getRowCount(); i++) {
                // menyimpan nama dan jumlah menjadi variable
                String nama = tableModel.getValueAt (i , 0).toString () ;
                float harga = new Float (tableModel.getValueAt (0 , 1).toString()) ;
                int jumlah = new Integer (tableModel.getValueAt (i , 2).toString()) ;
                this.belanja.add (new Item(nama, jumlah , (int) harga)) ;   
            }
            // instansiasi kelas Transaksi dengan kode dan committed belanja
            Transaksi tsk = new Transaksi (this.code , this.belanja) ;
            // Stringbuilder untuk menangani output Transaksi
            StringBuilder sbr = new StringBuilder() ;
            // menambahkan hasil transaksi
            sbr.append(tsk.bayar()) ;
            // memanggil dialog dengan StringBuilder
            JOptionPane.showMessageDialog(this , sbr , "Transaksi" , JOptionPane.INFORMATION_MESSAGE) ;
            // melakukan transaksi baru
            newTransaksi () ;
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    
    }//GEN-LAST:event_SaveButtonActionPerformed

    private void NewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewButtonActionPerformed
        this.JumlahItemsText.setText ("1") ;
        this.NewButton.setEnabled (false) ;
        this.CancelButton.setEnabled (true) ;
        this.AddButton.setEnabled (true) ;
        this.JumlahItemsText.setEnabled (true) ;
        this.ItemsComboBox.setEnabled (true) ;
        this.CodeText.setText (this.setCode()) ;
    }//GEN-LAST:event_NewButtonActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        String nama = this.ItemsComboBox.getSelectedItem().toString();
        int harga = new Integer (this.JumlahItemsText.getText()) ;
        int jumlah  = new Integer(this.JumlahItemsText.getText());
        Item item = new Item(nama , jumlah , harga);
        if(isDouble(nama)) {
            updateJumlah(nama , jumlah);
        } else {
            Object[] obj = {
                item.getNama(),
                item.getHarga(),
                item.getJumlah()
            } ;
            tableModel.addRow(obj);
        }
        ArrayList<Item> belanja1 = this.belanja;
    }//GEN-LAST:event_AddButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        // ngecek apakah ada baris yang dipilih
        if (ItemsListTable.getSelectedRow() <0) {
            // jika tidak ada , maka akan muncul tulisan seperti ini
            String sbr = "Pilih Item yang akan dihapus" ;
            JOptionPane.showMessageDialog(this , sbr , "Information" , JOptionPane.INFORMATION_MESSAGE) ;  
        } else {
            // jika ada baris yg dipilih , maka baris tersebut akan dihapus
            int count = ItemsListTable.getSelectedRows().length ;
            for (int i = 0; i < count; i++) {
                tableModel.removeRow(ItemsListTable.getSelectedRow()) ;
            }
            
        }
        ArrayList<Item> belanja1 = this.belanja;
    }//GEN-LAST:event_RemoveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TableCoffee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TableCoffee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TableCoffee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TableCoffee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TableCoffee().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton CancelButton;
    private javax.swing.JTextField CodeText;
    private javax.swing.JComboBox<String> ItemsComboBox;
    private javax.swing.JTable ItemsListTable;
    private javax.swing.JTextField JumlahItemsText;
    private javax.swing.JButton NewButton;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JButton SaveButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
